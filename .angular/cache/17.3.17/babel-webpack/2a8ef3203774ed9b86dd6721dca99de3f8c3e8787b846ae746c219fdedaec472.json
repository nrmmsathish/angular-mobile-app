{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let RewardService = /*#__PURE__*/(() => {\n  class RewardService {\n    constructor() {\n      this.rewardEvents = new BehaviorSubject([]);\n      this.currentReward = new BehaviorSubject(null);\n      this.rewardEvents$ = this.rewardEvents.asObservable();\n      this.currentReward$ = this.currentReward.asObservable();\n      this.rewards = [];\n    }\n    addReward(reward) {\n      const newReward = {\n        ...reward,\n        id: this.generateId(),\n        timestamp: new Date()\n      };\n      this.rewards.push(newReward);\n      this.rewardEvents.next([...this.rewards]);\n      this.currentReward.next(newReward);\n      // Clear current reward after 3 seconds\n      setTimeout(() => {\n        this.currentReward.next(null);\n      }, 3000);\n    }\n    getRewards() {\n      return [...this.rewards];\n    }\n    getTotalPoints() {\n      return this.rewards.reduce((total, reward) => total + reward.points, 0);\n    }\n    generateId() {\n      return Math.random().toString(36).substr(2, 9);\n    }\n    // Predefined reward templates\n    static {\n      this.FORM_UPDATE_REWARD = {\n        title: 'Form Updated!',\n        description: 'Successfully updated investment forms',\n        points: 100,\n        icon: 'ðŸ“‹',\n        type: 'form_update'\n      };\n    }\n    static {\n      this.PROFILE_COMPLETION_REWARD = {\n        title: 'Profile Completed!',\n        description: 'Investor profile successfully completed',\n        points: 200,\n        icon: 'âœ…',\n        type: 'task_completion'\n      };\n    }\n    static {\n      this.FIRST_FORM_REWARD = {\n        title: 'First Form Master!',\n        description: 'Completed your first investment form',\n        points: 150,\n        icon: 'ðŸŽ¯',\n        type: 'achievement_unlock'\n      };\n    }\n    static {\n      this.Éµfac = function RewardService_Factory(t) {\n        return new (t || RewardService)();\n      };\n    }\n    static {\n      this.Éµprov = /*@__PURE__*/i0.ÉµÉµdefineInjectable({\n        token: RewardService,\n        factory: RewardService.Éµfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return RewardService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}