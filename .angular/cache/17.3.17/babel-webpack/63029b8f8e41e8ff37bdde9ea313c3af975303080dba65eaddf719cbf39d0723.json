{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nlet HeaderComponent = class HeaderComponent {\n  constructor(router) {\n    this.router = router;\n    this.currentTime = \"12:53\";\n    this.activeTab = \"Discover\";\n  }\n  ngOnInit() {\n    this.updateTime();\n    this.timeInterval = setInterval(() => this.updateTime(), 60000);\n  }\n  ngOnDestroy() {\n    if (this.timeInterval) {\n      clearInterval(this.timeInterval);\n    }\n  }\n  updateTime() {\n    const now = new Date();\n    this.currentTime = now.toLocaleTimeString(\"en-US\", {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: false\n    });\n  }\n  setActiveTab(tab) {\n    this.activeTab = tab;\n    // Navigate to appropriate route based on tab\n    if (tab === \"Academy\") {\n      this.router.navigate([\"/academy\"]);\n    } else if (tab === \"Discover\") {\n      this.router.navigate([\"/discover\"]);\n    }\n  }\n};\nHeaderComponent = __decorate([Component({\n  selector: \"app-header-component\",\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: \"./header-component.html\",\n  styleUrl: \"./header-component.css\"\n})], HeaderComponent);\nexport { HeaderComponent };","map":{"version":3,"names":["Component","CommonModule","HeaderComponent","constructor","router","currentTime","activeTab","ngOnInit","updateTime","timeInterval","setInterval","ngOnDestroy","clearInterval","now","Date","toLocaleTimeString","hour","minute","hour12","setActiveTab","tab","navigate","__decorate","selector","standalone","imports","templateUrl","styleUrl"],"sources":["C:\\Users\\Administrator\\Videos\\Hackathon\\academy\\angular-mobile-app\\src\\app\\components\\header\\header.ts"],"sourcesContent":["import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-header-component\",\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: \"./header-component.html\",\r\n  styleUrl: \"./header-component.css\",\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  currentTime = \"12:53\";\r\n  activeTab = \"Discover\";\r\n  private timeInterval: any;\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.updateTime();\r\n    this.timeInterval = setInterval(() => this.updateTime(), 60000);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.timeInterval) {\r\n      clearInterval(this.timeInterval);\r\n    }\r\n  }\r\n\r\n  updateTime() {\r\n    const now = new Date();\r\n    this.currentTime = now.toLocaleTimeString(\"en-US\", {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      hour12: false,\r\n    });\r\n  }\r\n\r\n  setActiveTab(tab: string) {\r\n    this.activeTab = tab;\r\n    // Navigate to appropriate route based on tab\r\n    if (tab === \"Academy\") {\r\n      this.router.navigate([\"/academy\"]);\r\n    } else if (tab === \"Discover\") {\r\n      this.router.navigate([\"/discover\"]);\r\n    }\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAA2B,eAAe;AAC5D,SAASC,YAAY,QAAQ,iBAAiB;AAUvC,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAK1BC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAJ1B,KAAAC,WAAW,GAAG,OAAO;IACrB,KAAAC,SAAS,GAAG,UAAU;EAGe;EAErCC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,EAAE;IACjB,IAAI,CAACC,YAAY,GAAGC,WAAW,CAAC,MAAM,IAAI,CAACF,UAAU,EAAE,EAAE,KAAK,CAAC;EACjE;EAEAG,WAAWA,CAAA;IACT,IAAI,IAAI,CAACF,YAAY,EAAE;MACrBG,aAAa,CAAC,IAAI,CAACH,YAAY,CAAC;;EAEpC;EAEAD,UAAUA,CAAA;IACR,MAAMK,GAAG,GAAG,IAAIC,IAAI,EAAE;IACtB,IAAI,CAACT,WAAW,GAAGQ,GAAG,CAACE,kBAAkB,CAAC,OAAO,EAAE;MACjDC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE,SAAS;MACjBC,MAAM,EAAE;KACT,CAAC;EACJ;EAEAC,YAAYA,CAACC,GAAW;IACtB,IAAI,CAACd,SAAS,GAAGc,GAAG;IACpB;IACA,IAAIA,GAAG,KAAK,SAAS,EAAE;MACrB,IAAI,CAAChB,MAAM,CAACiB,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;KACnC,MAAM,IAAID,GAAG,KAAK,UAAU,EAAE;MAC7B,IAAI,CAAChB,MAAM,CAACiB,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;;EAEvC;CACD;AApCYnB,eAAe,GAAAoB,UAAA,EAP3BtB,SAAS,CAAC;EACTuB,QAAQ,EAAE,sBAAsB;EAChCC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAACxB,YAAY,CAAC;EACvByB,WAAW,EAAE,yBAAyB;EACtCC,QAAQ,EAAE;CACX,CAAC,C,EACWzB,eAAe,CAoC3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}