{"ast":null,"code":"import { RouterOutlet, NavigationEnd, NavigationStart } from \"@angular/router\";\nimport { HeaderComponent } from \"./components/header/header\";\nimport { FooterComponent } from \"./components/footer/footer\";\nimport { LoadingComponent } from \"./components/loading/loading.component\";\nimport { CommonModule } from \"@angular/common\";\nimport { filter } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./services/loading.service\";\nimport * as i3 from \"@angular/common\";\nfunction AppComponent_app_header_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-header\");\n  }\n}\nfunction AppComponent_app_footer_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-footer\");\n  }\n}\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(router, loadingService) {\n      this.router = router;\n      this.loadingService = loadingService;\n      this.title = \"angular-mobile-app\";\n      this.showHeader = true;\n      this.showFooter = true;\n      // Set initial state based on current route  \n      const currentUrl = this.router.url;\n      // Clean localStorage flags if we're starting on citi-home\n      if (currentUrl.includes('citi-home') || currentUrl === '/') {\n        localStorage.removeItem('academyMode');\n        localStorage.removeItem('hideHeader');\n      }\n      this.updateHeaderFooterVisibility(currentUrl);\n    }\n    ngOnInit() {\n      // Handle navigation events for header/footer visibility\n      this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\n        const url = event.url;\n        // Special handling for citi-home to ensure clean state\n        if (url.includes('citi-home') || url === '/') {\n          // Clear any lingering header hiding flags\n          localStorage.removeItem('academyMode');\n          localStorage.removeItem('hideHeader');\n          // Force update after a small delay\n          setTimeout(() => {\n            localStorage.removeItem('academyMode');\n            localStorage.removeItem('hideHeader');\n          }, 100);\n        }\n        // Update header and footer visibility based on route\n        this.updateHeaderFooterVisibility(url);\n        // Double-check after a small delay to ensure state is correct\n        setTimeout(() => {\n          this.updateHeaderFooterVisibility(url);\n        }, 50);\n      });\n      // Handle loading states for navigation\n      this.router.events.subscribe(event => {\n        if (event instanceof NavigationStart) {\n          this.loadingService.show();\n        } else if (event instanceof NavigationEnd) {\n          // Add a small delay to show the loading animation\n          setTimeout(() => {\n            this.loadingService.hide();\n          }, 500);\n        }\n      });\n    }\n    updateHeaderFooterVisibility(url) {\n      if (url.includes('dashboard')) {\n        // Dashboard: hide both header and footer\n        this.showHeader = false;\n        this.showFooter = false;\n      } else if (url.includes('citi-home') || url === '/') {\n        // Citi-home: show header but hide footer\n        this.showHeader = true;\n        this.showFooter = false;\n      } else if (url.includes('signup') || url.includes('card-questionnaire') || url.includes('card-recommendation-result') || url.includes('card-application-success')) {\n        // Signup and card-related pages: show header but hide footer\n        this.showHeader = true;\n        this.showFooter = false;\n      } else {\n        // All other pages: show both header and footer\n        this.showHeader = true;\n        this.showFooter = true;\n      }\n    }\n    static {\n      this.ɵfac = function AppComponent_Factory(t) {\n        return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.LoadingService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AppComponent,\n        selectors: [[\"app-root\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 6,\n        vars: 4,\n        consts: [[1, \"app-container\"], [4, \"ngIf\"], [1, \"main-content\"]],\n        template: function AppComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵtemplate(1, AppComponent_app_header_1_Template, 1, 0, \"app-header\", 1);\n            i0.ɵɵelementStart(2, \"main\", 2);\n            i0.ɵɵelement(3, \"router-outlet\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(4, AppComponent_app_footer_4_Template, 1, 0, \"app-footer\", 1);\n            i0.ɵɵelement(5, \"app-loading\");\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.showHeader);\n            i0.ɵɵadvance();\n            i0.ɵɵclassProp(\"full-screen\", !ctx.showHeader);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.showFooter);\n          }\n        },\n        dependencies: [RouterOutlet, HeaderComponent, FooterComponent, LoadingComponent, CommonModule, i3.NgIf],\n        styles: [\".app-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;min-height:100vh;min-height:100dvh;background-color:#f8f9fa;position:relative}.main-content[_ngcontent-%COMP%]{flex:1;overflow-y:auto}.main-content.full-screen[_ngcontent-%COMP%]{padding-bottom:0;height:100vh;height:100dvh}@media screen and (max-height: 600px){.main-content[_ngcontent-%COMP%]{padding-bottom:calc(70px + env(safe-area-inset-bottom,0px))}.main-content.full-screen[_ngcontent-%COMP%]{padding-bottom:0}}@media screen and (max-height: 500px){.main-content[_ngcontent-%COMP%]{padding-bottom:calc(60px + env(safe-area-inset-bottom,0px))}.main-content.full-screen[_ngcontent-%COMP%]{padding-bottom:0}}\"]\n      });\n    }\n  }\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}