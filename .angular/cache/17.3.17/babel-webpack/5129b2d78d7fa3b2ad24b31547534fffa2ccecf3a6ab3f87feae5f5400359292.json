{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/navigation.service\";\nimport * as i3 from \"@angular/common\";\nfunction CardQuestionnaireComponent_div_18_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function CardQuestionnaireComponent_div_18_button_1_Template_button_click_0_listener() {\n      const option_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.selectMonthlySpend(option_r2.value));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"selected\", ctx_r2.questionnaireData.monthlySpend === option_r2.value);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", option_r2.label, \" \");\n  }\n}\nfunction CardQuestionnaireComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtemplate(1, CardQuestionnaireComponent_div_18_button_1_Template, 2, 3, \"button\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.monthlySpendOptions);\n  }\n}\nfunction CardQuestionnaireComponent_div_19_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function CardQuestionnaireComponent_div_19_button_1_Template_button_click_0_listener() {\n      const category_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.selectSpendCategory(category_r5.value));\n    });\n    i0.ɵɵelementStart(1, \"span\", 20);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 21);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const category_r5 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"selected\", ctx_r2.questionnaireData.primarySpendCategory === category_r5.value);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(category_r5.icon);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(category_r5.label);\n  }\n}\nfunction CardQuestionnaireComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, CardQuestionnaireComponent_div_19_button_1_Template, 5, 4, \"button\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.spendCategories);\n  }\n}\nfunction CardQuestionnaireComponent_div_20_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function CardQuestionnaireComponent_div_20_button_1_Template_button_click_0_listener() {\n      const option_r7 = i0.ɵɵrestoreView(_r6).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.selectTravelFrequency(option_r7.value));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r7 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"selected\", ctx_r2.questionnaireData.travelFrequency === option_r7.value);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", option_r7.label, \" \");\n  }\n}\nfunction CardQuestionnaireComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtemplate(1, CardQuestionnaireComponent_div_20_button_1_Template, 2, 3, \"button\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.travelOptions);\n  }\n}\nfunction CardQuestionnaireComponent_div_21_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function CardQuestionnaireComponent_div_21_button_1_Template_button_click_0_listener() {\n      const reward_r9 = i0.ɵɵrestoreView(_r8).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.selectRewardsPreference(reward_r9.value));\n    });\n    i0.ɵɵelementStart(1, \"span\", 20);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 21);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const reward_r9 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"selected\", ctx_r2.questionnaireData.rewardsPreference === reward_r9.value);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(reward_r9.icon);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(reward_r9.label);\n  }\n}\nfunction CardQuestionnaireComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, CardQuestionnaireComponent_div_21_button_1_Template, 5, 4, \"button\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.rewardsOptions);\n  }\n}\nfunction CardQuestionnaireComponent_div_22_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function CardQuestionnaireComponent_div_22_button_1_Template_button_click_0_listener() {\n      const option_r11 = i0.ɵɵrestoreView(_r10).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.selectIncome(option_r11.value));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r11 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"selected\", ctx_r2.questionnaireData.annualIncome === option_r11.value);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", option_r11.label, \" \");\n  }\n}\nfunction CardQuestionnaireComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtemplate(1, CardQuestionnaireComponent_div_22_button_1_Template, 2, 3, \"button\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.incomeOptions);\n  }\n}\nexport let CardQuestionnaireComponent = /*#__PURE__*/(() => {\n  class CardQuestionnaireComponent {\n    constructor(router, navigationService) {\n      this.router = router;\n      this.navigationService = navigationService;\n      this.currentStep = 1;\n      this.totalSteps = 5;\n      this.questionnaireData = {\n        monthlySpend: 0,\n        primarySpendCategory: '',\n        travelFrequency: '',\n        rewardsPreference: '',\n        annualIncome: 0\n      };\n      this.monthlySpendOptions = [{\n        label: 'Less than SGD 1,000',\n        value: 1000\n      }, {\n        label: 'SGD 1,000 - 3,000',\n        value: 2000\n      }, {\n        label: 'SGD 3,000 - 5,000',\n        value: 4000\n      }, {\n        label: 'SGD 5,000 - 10,000',\n        value: 7500\n      }, {\n        label: 'More than SGD 10,000',\n        value: 15000\n      }];\n      this.spendCategories = [{\n        label: 'Dining & Food',\n        value: 'dining',\n        icon: '🍽️'\n      }, {\n        label: 'Travel & Transportation',\n        value: 'travel',\n        icon: '✈️'\n      }, {\n        label: 'Shopping & Retail',\n        value: 'shopping',\n        icon: '🛍️'\n      }, {\n        label: 'Groceries & Essentials',\n        value: 'groceries',\n        icon: '🛒'\n      }, {\n        label: 'Entertainment',\n        value: 'entertainment',\n        icon: '🎬'\n      }, {\n        label: 'Fuel & Petrol',\n        value: 'fuel',\n        icon: '⛽'\n      }];\n      this.travelOptions = [{\n        label: 'Never',\n        value: 'never'\n      }, {\n        label: '1-2 times per year',\n        value: 'occasional'\n      }, {\n        label: '3-5 times per year',\n        value: 'frequent'\n      }, {\n        label: 'More than 5 times per year',\n        value: 'very_frequent'\n      }];\n      this.rewardsOptions = [{\n        label: 'Cashback',\n        value: 'cashback',\n        icon: '💰'\n      }, {\n        label: 'Miles & Travel Rewards',\n        value: 'miles',\n        icon: '✈️'\n      }, {\n        label: 'Points for Shopping',\n        value: 'points',\n        icon: '🎁'\n      }, {\n        label: 'Dining & Entertainment',\n        value: 'dining',\n        icon: '🍽️'\n      }];\n      this.incomeOptions = [{\n        label: 'SGD 30,000 - 60,000',\n        value: 45000\n      }, {\n        label: 'SGD 60,000 - 100,000',\n        value: 80000\n      }, {\n        label: 'SGD 100,000 - 200,000',\n        value: 150000\n      }, {\n        label: 'SGD 200,000 - 500,000',\n        value: 350000\n      }, {\n        label: 'More than SGD 500,000',\n        value: 750000\n      }];\n    }\n    ngOnInit() {\n      this.navigationService.setCurrentPage('Card Recommendation');\n    }\n    goBack() {\n      if (this.currentStep > 1) {\n        this.currentStep--;\n      } else {\n        this.router.navigate(['/dashboard']);\n        window.scrollTo({\n          top: 0,\n          behavior: 'smooth'\n        });\n      }\n    }\n    nextStep() {\n      if (this.currentStep < this.totalSteps) {\n        this.currentStep++;\n      }\n    }\n    submitQuestionnaire() {\n      // Navigate to card recommendation result\n      this.router.navigate(['/card-recommendation-result']);\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }\n    selectMonthlySpend(amount) {\n      this.questionnaireData.monthlySpend = amount;\n      setTimeout(() => this.nextStep(), 300);\n    }\n    selectSpendCategory(category) {\n      this.questionnaireData.primarySpendCategory = category;\n      setTimeout(() => this.nextStep(), 300);\n    }\n    selectTravelFrequency(frequency) {\n      this.questionnaireData.travelFrequency = frequency;\n      setTimeout(() => this.nextStep(), 300);\n    }\n    selectRewardsPreference(preference) {\n      this.questionnaireData.rewardsPreference = preference;\n      setTimeout(() => this.nextStep(), 300);\n    }\n    selectIncome(income) {\n      this.questionnaireData.annualIncome = income;\n      setTimeout(() => this.submitQuestionnaire(), 300);\n    }\n    getCurrentQuestion() {\n      switch (this.currentStep) {\n        case 1:\n          return 'What is your average monthly credit card spending?';\n        case 2:\n          return 'What is your primary spending category?';\n        case 3:\n          return 'How often do you travel?';\n        case 4:\n          return 'What type of rewards do you prefer?';\n        case 5:\n          return 'What is your annual income range?';\n        default:\n          return '';\n      }\n    }\n    static {\n      this.ɵfac = function CardQuestionnaireComponent_Factory(t) {\n        return new (t || CardQuestionnaireComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.NavigationService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: CardQuestionnaireComponent,\n        selectors: [[\"app-card-questionnaire\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 23,\n        vars: 10,\n        consts: [[1, \"questionnaire-container\"], [1, \"questionnaire-header\"], [\"title\", \"Back\", 1, \"back-btn\", 3, \"click\"], [\"width\", \"24\", \"height\", \"24\", \"viewBox\", \"0 0 24 24\", \"fill\", \"none\"], [\"d\", \"M19 12H5M12 19L5 12L12 5\", \"stroke\", \"currentColor\", \"stroke-width\", \"2\", \"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\"], [1, \"header-content\"], [1, \"progress-container\"], [1, \"progress-bar\"], [1, \"progress-fill\"], [1, \"progress-text\"], [1, \"question-container\"], [1, \"question-title\"], [\"class\", \"options-container\", 4, \"ngIf\"], [\"class\", \"options-container category-options\", 4, \"ngIf\"], [1, \"options-container\"], [\"class\", \"option-btn\", 3, \"selected\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"option-btn\", 3, \"click\"], [1, \"options-container\", \"category-options\"], [\"class\", \"option-btn category-btn\", 3, \"selected\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"option-btn\", \"category-btn\", 3, \"click\"], [1, \"category-icon\"], [1, \"category-label\"]],\n        template: function CardQuestionnaireComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n            i0.ɵɵlistener(\"click\", function CardQuestionnaireComponent_Template_button_click_2_listener() {\n              return ctx.goBack();\n            });\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(3, \"svg\", 3);\n            i0.ɵɵelement(4, \"path\", 4);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵnamespaceHTML();\n            i0.ɵɵelementStart(5, \"div\", 5)(6, \"h1\");\n            i0.ɵɵtext(7, \"Card Recommendation\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"p\");\n            i0.ɵɵtext(9, \"Answer a few questions to get your personalized card recommendation\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(10, \"div\", 6)(11, \"div\", 7);\n            i0.ɵɵelement(12, \"div\", 8);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(13, \"span\", 9);\n            i0.ɵɵtext(14);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(15, \"div\", 10)(16, \"h2\", 11);\n            i0.ɵɵtext(17);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(18, CardQuestionnaireComponent_div_18_Template, 2, 1, \"div\", 12)(19, CardQuestionnaireComponent_div_19_Template, 2, 1, \"div\", 13)(20, CardQuestionnaireComponent_div_20_Template, 2, 1, \"div\", 12)(21, CardQuestionnaireComponent_div_21_Template, 2, 1, \"div\", 13)(22, CardQuestionnaireComponent_div_22_Template, 2, 1, \"div\", 12);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(12);\n            i0.ɵɵstyleProp(\"width\", ctx.currentStep / ctx.totalSteps * 100, \"%\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate2(\"\", ctx.currentStep, \"/\", ctx.totalSteps, \"\");\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate(ctx.getCurrentQuestion());\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.currentStep === 1);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.currentStep === 2);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.currentStep === 3);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.currentStep === 4);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.currentStep === 5);\n          }\n        },\n        dependencies: [CommonModule, i3.NgForOf, i3.NgIf, FormsModule],\n        styles: [\".questionnaire-container[_ngcontent-%COMP%]{min-height:100vh;background:linear-gradient(135deg,#f8fafc,#f1f5f9);font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,sans-serif;padding:20px}.questionnaire-header[_ngcontent-%COMP%]{background:linear-gradient(135deg,#1e40af,#3b82f6);color:#fff;padding:16px 20px;border-radius:12px;position:relative;margin-bottom:20px}.questionnaire-header[_ngcontent-%COMP%]   .back-btn[_ngcontent-%COMP%]{position:absolute;top:16px;left:20px;background:#ffffff1a;border:none;color:#fff;padding:6px;border-radius:6px;cursor:pointer;transition:all .2s ease}.questionnaire-header[_ngcontent-%COMP%]   .back-btn[_ngcontent-%COMP%]:hover{background:#fff3;transform:translate(-2px)}.questionnaire-header[_ngcontent-%COMP%]   .header-content[_ngcontent-%COMP%]{text-align:center;padding-top:8px}.questionnaire-header[_ngcontent-%COMP%]   .header-content[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:22px;font-weight:600;margin:0 0 4px;letter-spacing:-.5px;color:#fff!important}.questionnaire-header[_ngcontent-%COMP%]   .header-content[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:14px;opacity:.9;margin:0;color:#fff!important}.progress-container[_ngcontent-%COMP%]{background:#fff;border-radius:12px;padding:16px 20px;margin-bottom:20px;display:flex;align-items:center;gap:12px;box-shadow:0 2px 10px #0000000d}.progress-container[_ngcontent-%COMP%]   .progress-bar[_ngcontent-%COMP%]{flex:1;height:6px;background:#e5e7eb;border-radius:3px;overflow:hidden}.progress-container[_ngcontent-%COMP%]   .progress-bar[_ngcontent-%COMP%]   .progress-fill[_ngcontent-%COMP%]{height:100%;background:linear-gradient(135deg,#3b82f6,#1d4ed8);border-radius:3px;transition:width .3s ease}.progress-container[_ngcontent-%COMP%]   .progress-text[_ngcontent-%COMP%]{font-size:14px;font-weight:600;color:#3b82f6;min-width:40px}.question-container[_ngcontent-%COMP%]{background:#fff;border-radius:12px;padding:24px 20px;box-shadow:0 2px 10px #0000000d}.question-container[_ngcontent-%COMP%]   .question-title[_ngcontent-%COMP%]{font-size:20px;font-weight:600;color:#1f2937;margin:0 0 24px;text-align:center;line-height:1.4}.options-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:12px}.options-container.category-options[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fit,minmax(140px,1fr));gap:12px}.options-container[_ngcontent-%COMP%]   .option-btn[_ngcontent-%COMP%]{background:#f8fafc;border:2px solid #e5e7eb;border-radius:12px;padding:16px 20px;font-size:15px;font-weight:500;color:#374151;cursor:pointer;transition:all .2s ease;text-align:center;min-height:60px;display:flex;align-items:center;justify-content:center}.options-container[_ngcontent-%COMP%]   .option-btn[_ngcontent-%COMP%]:hover{background:#f1f5f9;border-color:#3b82f6;transform:translateY(-1px)}.options-container[_ngcontent-%COMP%]   .option-btn.selected[_ngcontent-%COMP%]{background:#eff6ff;border-color:#3b82f6;color:#1d4ed8;font-weight:600}.options-container[_ngcontent-%COMP%]   .option-btn.category-btn[_ngcontent-%COMP%]{flex-direction:column;gap:8px;min-height:80px}.options-container[_ngcontent-%COMP%]   .option-btn.category-btn[_ngcontent-%COMP%]   .category-icon[_ngcontent-%COMP%]{font-size:24px;line-height:1}.options-container[_ngcontent-%COMP%]   .option-btn.category-btn[_ngcontent-%COMP%]   .category-label[_ngcontent-%COMP%]{font-size:13px;line-height:1.2}@media (max-width: 768px){.questionnaire-container[_ngcontent-%COMP%]{padding:16px}.options-container.category-options[_ngcontent-%COMP%]{grid-template-columns:repeat(2,1fr)}.question-container[_ngcontent-%COMP%]{padding:20px 16px}.question-container[_ngcontent-%COMP%]   .question-title[_ngcontent-%COMP%]{font-size:18px}.option-btn[_ngcontent-%COMP%]{padding:14px 16px;font-size:14px}.option-btn.category-btn[_ngcontent-%COMP%]{min-height:70px}.option-btn.category-btn[_ngcontent-%COMP%]   .category-icon[_ngcontent-%COMP%]{font-size:20px}.option-btn.category-btn[_ngcontent-%COMP%]   .category-label[_ngcontent-%COMP%]{font-size:12px}}\"]\n      });\n    }\n  }\n  return CardQuestionnaireComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}