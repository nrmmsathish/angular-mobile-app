{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class RewardService {\n  constructor() {\n    this.rewardEvents = new BehaviorSubject([]);\n    this.currentReward = new BehaviorSubject(null);\n    this.rewardEvents$ = this.rewardEvents.asObservable();\n    this.currentReward$ = this.currentReward.asObservable();\n    this.rewards = [];\n  }\n  addReward(reward) {\n    const newReward = {\n      ...reward,\n      id: this.generateId(),\n      timestamp: new Date()\n    };\n    this.rewards.push(newReward);\n    this.rewardEvents.next([...this.rewards]);\n    this.currentReward.next(newReward);\n    // Clear current reward after 3 seconds\n    setTimeout(() => {\n      this.currentReward.next(null);\n    }, 3000);\n  }\n  getRewards() {\n    return [...this.rewards];\n  }\n  getTotalPoints() {\n    return this.rewards.reduce((total, reward) => total + reward.points, 0);\n  }\n  generateId() {\n    return Math.random().toString(36).substr(2, 9);\n  }\n  // Predefined reward templates\n  static {\n    this.FORM_UPDATE_REWARD = {\n      title: 'Form Updated!',\n      description: 'Successfully updated investment forms',\n      points: 100,\n      icon: 'ðŸ“‹',\n      type: 'form_update'\n    };\n  }\n  static {\n    this.PROFILE_COMPLETION_REWARD = {\n      title: 'Profile Completed!',\n      description: 'Investor profile successfully completed',\n      points: 200,\n      icon: 'âœ…',\n      type: 'task_completion'\n    };\n  }\n  static {\n    this.FIRST_FORM_REWARD = {\n      title: 'First Form Master!',\n      description: 'Completed your first investment form',\n      points: 150,\n      icon: 'ðŸŽ¯',\n      type: 'achievement_unlock'\n    };\n  }\n  static {\n    this.Éµfac = function RewardService_Factory(t) {\n      return new (t || RewardService)();\n    };\n  }\n  static {\n    this.Éµprov = /*@__PURE__*/i0.ÉµÉµdefineInjectable({\n      token: RewardService,\n      factory: RewardService.Éµfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","RewardService","constructor","rewardEvents","currentReward","rewardEvents$","asObservable","currentReward$","rewards","addReward","reward","newReward","id","generateId","timestamp","Date","push","next","setTimeout","getRewards","getTotalPoints","reduce","total","points","Math","random","toString","substr","FORM_UPDATE_REWARD","title","description","icon","type","PROFILE_COMPLETION_REWARD","FIRST_FORM_REWARD","factory","Éµfac","providedIn"],"sources":["C:\\Users\\Administrator\\Videos\\Hackathon\\academy\\angular-mobile-app\\src\\app\\services\\reward.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nexport interface RewardEvent {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  points: number;\r\n  icon: string;\r\n  timestamp: Date;\r\n  type: 'task_completion' | 'form_update' | 'achievement_unlock';\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RewardService {\r\n  private rewardEvents = new BehaviorSubject<RewardEvent[]>([]);\r\n  private currentReward = new BehaviorSubject<RewardEvent | null>(null);\r\n\r\n  rewardEvents$ = this.rewardEvents.asObservable();\r\n  currentReward$ = this.currentReward.asObservable();\r\n\r\n  private rewards: RewardEvent[] = [];\r\n\r\n  addReward(reward: Omit<RewardEvent, 'id' | 'timestamp'>) {\r\n    const newReward: RewardEvent = {\r\n      ...reward,\r\n      id: this.generateId(),\r\n      timestamp: new Date()\r\n    };\r\n    \r\n    this.rewards.push(newReward);\r\n    this.rewardEvents.next([...this.rewards]);\r\n    this.currentReward.next(newReward);\r\n\r\n    // Clear current reward after 3 seconds\r\n    setTimeout(() => {\r\n      this.currentReward.next(null);\r\n    }, 3000);\r\n  }\r\n\r\n  getRewards(): RewardEvent[] {\r\n    return [...this.rewards];\r\n  }\r\n\r\n  getTotalPoints(): number {\r\n    return this.rewards.reduce((total, reward) => total + reward.points, 0);\r\n  }\r\n\r\n  private generateId(): string {\r\n    return Math.random().toString(36).substr(2, 9);\r\n  }\r\n\r\n  // Predefined reward templates\r\n  static readonly FORM_UPDATE_REWARD: Omit<RewardEvent, 'id' | 'timestamp'> = {\r\n    title: 'Form Updated!',\r\n    description: 'Successfully updated investment forms',\r\n    points: 100,\r\n    icon: 'ðŸ“‹',\r\n    type: 'form_update'\r\n  };\r\n\r\n  static readonly PROFILE_COMPLETION_REWARD: Omit<RewardEvent, 'id' | 'timestamp'> = {\r\n    title: 'Profile Completed!',\r\n    description: 'Investor profile successfully completed',\r\n    points: 200,\r\n    icon: 'âœ…',\r\n    type: 'task_completion'\r\n  };\r\n\r\n  static readonly FIRST_FORM_REWARD: Omit<RewardEvent, 'id' | 'timestamp'> = {\r\n    title: 'First Form Master!',\r\n    description: 'Completed your first investment form',\r\n    points: 150,\r\n    icon: 'ðŸŽ¯',\r\n    type: 'achievement_unlock'\r\n  };\r\n}"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAetC,OAAM,MAAOC,aAAa;EAH1BC,YAAA;IAIU,KAAAC,YAAY,GAAG,IAAIH,eAAe,CAAgB,EAAE,CAAC;IACrD,KAAAI,aAAa,GAAG,IAAIJ,eAAe,CAAqB,IAAI,CAAC;IAErE,KAAAK,aAAa,GAAG,IAAI,CAACF,YAAY,CAACG,YAAY,EAAE;IAChD,KAAAC,cAAc,GAAG,IAAI,CAACH,aAAa,CAACE,YAAY,EAAE;IAE1C,KAAAE,OAAO,GAAkB,EAAE;;EAEnCC,SAASA,CAACC,MAA6C;IACrD,MAAMC,SAAS,GAAgB;MAC7B,GAAGD,MAAM;MACTE,EAAE,EAAE,IAAI,CAACC,UAAU,EAAE;MACrBC,SAAS,EAAE,IAAIC,IAAI;KACpB;IAED,IAAI,CAACP,OAAO,CAACQ,IAAI,CAACL,SAAS,CAAC;IAC5B,IAAI,CAACR,YAAY,CAACc,IAAI,CAAC,CAAC,GAAG,IAAI,CAACT,OAAO,CAAC,CAAC;IACzC,IAAI,CAACJ,aAAa,CAACa,IAAI,CAACN,SAAS,CAAC;IAElC;IACAO,UAAU,CAAC,MAAK;MACd,IAAI,CAACd,aAAa,CAACa,IAAI,CAAC,IAAI,CAAC;IAC/B,CAAC,EAAE,IAAI,CAAC;EACV;EAEAE,UAAUA,CAAA;IACR,OAAO,CAAC,GAAG,IAAI,CAACX,OAAO,CAAC;EAC1B;EAEAY,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACZ,OAAO,CAACa,MAAM,CAAC,CAACC,KAAK,EAAEZ,MAAM,KAAKY,KAAK,GAAGZ,MAAM,CAACa,MAAM,EAAE,CAAC,CAAC;EACzE;EAEQV,UAAUA,CAAA;IAChB,OAAOW,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;EAChD;EAEA;;IACgB,KAAAC,kBAAkB,GAA0C;MAC1EC,KAAK,EAAE,eAAe;MACtBC,WAAW,EAAE,uCAAuC;MACpDP,MAAM,EAAE,GAAG;MACXQ,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE;KACP;EAAC;;IAEc,KAAAC,yBAAyB,GAA0C;MACjFJ,KAAK,EAAE,oBAAoB;MAC3BC,WAAW,EAAE,yCAAyC;MACtDP,MAAM,EAAE,GAAG;MACXQ,IAAI,EAAE,GAAG;MACTC,IAAI,EAAE;KACP;EAAC;;IAEc,KAAAE,iBAAiB,GAA0C;MACzEL,KAAK,EAAE,oBAAoB;MAC3BC,WAAW,EAAE,sCAAsC;MACnDP,MAAM,EAAE,GAAG;MACXQ,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE;KACP;EAAC;;;uBA7DS/B,aAAa;IAAA;EAAA;;;aAAbA,aAAa;MAAAkC,OAAA,EAAblC,aAAa,CAAAmC,IAAA;MAAAC,UAAA,EAFZ;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}